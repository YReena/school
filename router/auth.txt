const express = require("express");
//const { default: Update } = require("../../../React/client/src/components/Update");
const router = express.Router();

const { Student, Expenditure } = require('../model/studSchema');
const { Admin } = require('../model/studSchema');
const { Marks } = require('../model/studSchema');
const { Subject } = require('../model/studSchema');
const { Teacher } = require('../model/studSchema');



/* ------------------- ADMISSION ROUTERS ------------------------*/
router.post('/admission', async (req, res) => {
    const { admissionno, firstname, lastname, fathername, mothername, grade, gender, dob, session, adharcardno, address, mobileno } = req.body;
    if (!firstname || !lastname || !fathername || !mothername || !grade || !gender || !admissionno || !dob || !session || !adharcardno || !address || !mobileno) {
        return res.status(422).json({ "error": "*please fill all fields" });
    }

    try {
        const studentExist = await Student.findOne({ admissionno })
        if (studentExist) {
            res.status(422).json({ "error": "*student is already exists !! " });
        }

        else {
            const student = await Student({ admissionno, firstname, lastname, fathername, mothername, grade, gender, dob, session, adharcardno, address, mobileno })
            const studentadd = await student.save();


            if (studentadd) {
                res.status(202).json({ "message": " Student add sucessfullly !!" });
            }

            res.status(422).json({ "error": " *failed to add!!" });

        }
    }
    catch (err) {
        console.log(err);
    }
})
router.post('/login', async (req, res) => {
    // const{email , password} = req.body;
    const { email, password } = req.body;

    if (!email || !password)
        res.status(422).json({ error: " please enter credentials" });

    try {
        const adminExist = await Admin.findOne({ email })
        if (adminExist) {
            const adminPassword = await Admin.findOne({ password })
            if (adminPassword) {
                res.status(202).json({ message: "logged in succesfully!!" });
            }
            res.status(422).json({ error: "Invalid credentails" });
        }
        res.status(422).json({ error: "Invalid credentails" });
    }
    catch (err) {
        console.log(err);
    }


    // try{
    //     const admin = new Admin({email , password});
    //     const adminsave = await admin.save();

    //     if(adminsave)
    //     res.status(200).json({message:"add successfully"});
    // }
    // catch(err){app.js
    //     console.log(err);
    // }
})

router.get('/student/:admissionno', async (req, res) => {
    try {
        const admissionno = req.params.admissionno;
        const studentInfo = await Student.find({ admissionno })
        if (studentInfo) {
            res.status(201).json(studentInfo);
            console.log(studentInfo);
        }
        else
            res.status(204).json({ information: "no data found !!" })

    }
    catch (err) {
        console.log(err);
    }

})
router.get('/student', async (req, res) => {
    const totalStudent = await Student.find();
    res.status(201).json(totalStudent);
})

router.get('/student/edit/:id', async (req, res) => {
    const id = req.params.id;

    const studentExist = await Student.find({ _id: id });
    if (studentExist)
        console.log(studentExist);
    res.status(201).json(studentExist);
})

router.delete('/student/deleteStudent/:id', async (req, res) => {
    const id = req.params.id;
    const delstudent = await Student.deleteOne({ _id: id });
    if (delstudent)
        res.status(201).json(delstudent);

    else
        res.status(404).json("error");
})

router.patch('/student/update/:id', async (req, res) => {
    const id = req.params.id;
    const data = req.body;
    const resultfound = await Student.findByIdAndUpdate(id, data, {
        new: true
    })
    if (resultfound) {
        res.status(201).json(resultfound);
        console.log(resultfound);
    }

    else
        res.status(422).json({ error: "error hai" });
})

/* ================================= Marks router =======================*/
router.post('/marks', async (req, res) => {
    try {
        const admissionno = req.body.admissionno;
        const body = req.body;
        console.log(body);
        const studentExist = await Marks.findOneAndUpdate({ admissionno: admissionno }, { $set: { body } }, { new: true });
        console.log(studentExist);

    }
    catch (err) {
        console.log(err);
    }


})





/*============   Subject related routers   ============*/

router.post('/subject', async (req, res) => {
    const { grade, subject } = req.body;

    if (!grade || !subject)
        res.status(400).json({ "error": "PLease fill fields" });

    try {
        const subjectExist = await Subject.findOne({
            $and: [
                {
                    grade: grade
                },
                {
                    subject: subject
                }
            ]
        })

        if (subjectExist) {
            console.log(subjectExist);
            res.status(409).json({ "message": "Already Exist" });
        }

        else {
            const subjectAdd = await Subject({ grade, subject });
            const subjectAddDone = await subjectAdd.save();
            if (subjectAddDone) {
                res.status(201).json({ "message": "Add successfully" });
            }

            res.status(422).json({ "error": " Failed to add!!" });
        }
    }
    catch (err) {
        console.log(err);
    }
})



router.get('/subject/:grade', async (req, res) => {
    const grade = req.params.grade;
    const subject = await Subject.find({ grade: grade });
    //console.log(subject);
    res.status(201).json(subject);
})


router.delete('/subject/:id', async (req, res) => {
    const id = req.params.id;
    try {
        const subDel = await Subject.deleteOne({ _id: id });
        if (subDel) {
            res.status(201).json(subDel);

        }
        res.status(422).json({ "error": "already deleted" });
    }
    catch (err) {
        console.log(err);
    }
})


/*---------------------------------Staff Router--------------------*/
router.post('/staff', async (req, res) => {
    const { idno, firstname, lastname, fathername, mothername, gender, dob, salary, adharcardno, address, mobileno } = req.body;


    if (!idno || !firstname || !lastname || !fathername || !mothername || !gender || !dob || !salary || !adharcardno || !address || !mobileno) {
        res.status(422).json({ "error": "*please fill all field" });
    }

    try {

        const teacherExist = await Teacher.findOne({ adharcardno });
        if (teacherExist) {
            res.status(422).json({ "error": "Already Exist" });
        }
        else {
            const teacher = await Teacher({ idno, firstname, lastname, fathername, mothername, gender, dob, salary, adharcardno, address, mobileno });
            const teacherAdd = await teacher.save();
            console.log(teacher);

            if (teacherAdd) {
                res.status(201).json({ "message": "add succesfully" });
            }
            res.status(422).json({ "error": "failed to add" });
        }
    }
    catch (err) {
        console.log(err);
    }
})


router.get('/staffinfo/:idno', async (req, res) => {
    try {
        const idno = req.params.idno;
        const teacher = await Teacher.findOne({ idno });

        if (teacher) {
            res.status(201).json(teacher);
        }
        res.status(422).json({ "error": "Not Found" });
    }
    catch (err) {
        console.log(err);
    }
})


router.get('/staff', async (req, res) => {
    try {
        const Staff = await Teacher.find();

        if (Staff) {
            res.status(201).json(Staff);
        }
        res.status(422).json({ "error": " not found" });
    }
    catch (err) {
        console.log(err);
    }
})



/*---------------------------------Expenditue-------------------------------------*/
router.post('/expenditure', async (req, res) => {

    try {
        const { date, amount, description } = req.body;
        if (!amount || !description || !date) {
            res.status(422).json({ "error": "please fill all fields" });
        }

        else {

            const expData = await Expenditure({ date, amount, description });
            const saveExp = await expData.save();

            if (saveExp) {
                res.status(201).json({ "message": "Sucessfully Save" });
            }
            res.status(422).json({ "error": " failed to add" });
        }
    }
    catch (err) {
        console.log(err);
    }
})


router.get('/expenditure', async (req, res) => {
    try {
        const expData = await Expenditure.find({});
        if (expData) {
            res.status(201).json(expData);
        }
        res.status.apply(422).json({ "error": "not found" });
    }
    catch (err) {
        console.log(err);
    }
})

router.delete('/expenditure/:id', async (req, res) => {
    try {
        const _id = req.params.id;
        const delExp = await Expenditure.deleteOne({ _id : _id });

        if (delExp){
            res.status(201).json({ "message": "deleted succesfully" });
            console.log(delExp);
        }

            res.status(422).json({"error":"ot deleted"});
    }

    catch (err) {
        console.log(err);
    }
})


module.exports = router;



